generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  role           UserRole  @default(USER)
  username       String?
  accounts       Account[]
  sessions       Session[]
  enrollments    Enrollment[]
}

model Account {
  id                 String   @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Enrollment {
  id        Int     @id @default(autoincrement())
  userId    String
  courseId  Int

  user      User    @relation(fields: [userId], references: [id])
  course    Course  @relation(fields: [courseId], references: [id])
  
  @@unique([userId, courseId])
}

model Course {
  id          Int          @id
  courseCode  String       @unique
  name        String
  description String
  src         String
  exercises   Exercise[]
  lectures    Lecture[]
  enrollments Enrollment[]
}

model Exercise {
  id         Int      @id
  name       String
  deadline   DateTime
  link       String
  done       Boolean
  courseCode String
  course     Course   @relation(fields: [courseCode], references: [courseCode])
}

model Lecture {
  id            Int     @id
  day           String
  time          String
  type          String
  durationHours Int
  checked       Boolean
  courseCode    String
  course        Course  @relation(fields: [courseCode], references: [courseCode])
}
